/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.genesis.vistas;

import com.genesis.model.conexion;
import com.genesis.model.tableModel;
import util.Tools;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author RC
 */
public class wCambioPassword extends javax.swing.JInternalFrame implements ActiveFrame {
String Opcion = "";
    String CRUD = "";
    private tableModel tm;
    private Map<String, String> fields, conditions, rtn;
    /**
     * Creates new form wCambioContrashena
     */
    public wCambioPassword(String Opcion) {
        initComponents();
        this.Opcion = Opcion;
        tm = new tableModel();
        tm.init("usuarios");
        fields = new HashMap<String, String>();
        conditions = new HashMap<String, String>();
    }
    public void wCambioContrasenha() {
        String msg = "";
        String strActClave, strNewClave, strConfClave = "";
        String strEncript = "";
        char ch_actclave[] = actclave.getPassword();
        char ch_newclave[] = newclave.getPassword();
        char ch_confclave[] = confclave.getPassword();
        if (ch_actclave.length < 8) {
            JOptionPane.showMessageDialog(rootPane, "Clave actual debe ser mayor a 8 caracteres ");
            actclave.requestFocus();
            return;

        }
        if (ch_newclave.length < 8) {
            JOptionPane.showMessageDialog(rootPane, "Nueva Clave debe ser mayor a 8 caracteres ");
            newclave.requestFocus();
            return;
        }
        if (ch_confclave.length < 8) {
            JOptionPane.showMessageDialog(rootPane, "Clave Confirmación debe ser mayor a 8 caracteres ");
            confclave.requestFocus();
            return;
        }

        if (Tools.validatePsw(ch_actclave)) {
            strActClave = new String(ch_actclave);
            strEncript = Tools.encryptMD5(strActClave);
            fields.put("*", "*");
            conditions.put("id", conexion.getUserId() + "");
            conditions.put("password", strEncript);
            rtn = tm.readRegisterById(fields, conditions);
            if (rtn.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Clave actual incorrecta");
                actclave.requestFocus();
                return;
            }
            String strNew, strConf = "";
            strNew = new String(ch_newclave);
            strConf = new String(ch_confclave);
            if (!strNew.equals(strConf)) {
                JOptionPane.showMessageDialog(rootPane, "Clave Nueva y Clave Confirmación no coinciden");
                newclave.requestFocus();
                return;
            }
            fields.clear();

            String nwPsw = new String(ch_newclave);
            strEncript = Tools.encryptMD5(nwPsw);
            fields.put("id", conexion.getUserId() + "");
            fields.put("password", strEncript);
           int count = tm.updateRegister(fields);
            //System.out.println("El usuario "+rtn.toString());
            
            if (count < 1) {
            msg = "ERROR AL INTENTAR ACTUALIZAR CONTRASEÑA";
        } else {
            msg = "SE HA ACTUALIZADO CORRECTAMENTE LA CONTRASEÑA";
            this.actclave.setText("");
            this.newclave.setText("");
            this.confclave.setText("");
        }
        JOptionPane.showMessageDialog(this, msg, "ATENCIÓN...!", JOptionPane.DEFAULT_OPTION);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        actclave = new javax.swing.JPasswordField();
        newclave = new javax.swing.JPasswordField();
        confclave = new javax.swing.JPasswordField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Abm Cambio Contraseña");
        setName("m_cambioContrasenha"); // NOI18N

        jLabel1.setText("Contraseña Actual");

        jLabel2.setText("Nueva Contraseña");

        jLabel3.setText("Confirmar Contraseña");

        confclave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confclaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actclave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newclave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(confclave)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(actclave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(newclave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(confclave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confclaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confclaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confclaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField actclave;
    private javax.swing.JPasswordField confclave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField newclave;
    // End of variables declaration//GEN-END:variables

    @Override
    public void imGrabar(String crud) {
     this.CRUD = crud;
        int metodo = 3;
        System.out.println("OPCION VENTANA PRINCIPAL: " + Opcion);
        metodo = Tools.validarPermiso(conexion.getGrupoId(), Opcion, crud);
        if (Tools.validarPermiso(conexion.getGrupoId(), Opcion, crud) == 0) {
            String msg = "PERMISO NO AUTORIZADO PARA REALIZAR ESTA OPERACIÓN";
            JOptionPane.showMessageDialog(this, msg, "ATENCIÓN.!!", JOptionPane.DEFAULT_OPTION);
        }
        wCambioContrasenha();    
    }

    @Override
    public void imFiltrar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imActualizar(String crud) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imBorrar(String crud) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imNuevo() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imBuscar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imPrimero() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imSiguiente() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imAnterior() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imUltimo() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imImprimir() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imInsDet() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imDelDet() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void imCerrar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
