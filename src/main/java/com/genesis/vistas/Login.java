package com.genesis.vistas;

import com.genesis.model.conexion;
import com.genesis.model.tableModel;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import util.Tools;

/**
 * @author Ezequiel Cristaldo
 */
public class Login extends javax.swing.JFrame {
    wPrincipal principalView;
    
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        this.setTitle("Genesis - Inicio de Sesion");
        setLocationRelativeTo(null);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        textFieldUsuario = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        btnEntrar = new javax.swing.JButton();
        textFieldPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Iniciar Sesion");

        lblUsuario.setText("Usuario");

        lblPassword.setText("Password");

        btnEntrar.setText("Entrar");
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });

        textFieldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textFieldPasswordKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPassword)
                            .addComponent(lblUsuario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEntrar)
                            .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textFieldUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                .addComponent(textFieldPassword)))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuario)
                    .addComponent(textFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(textFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnEntrar)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
        iniciarSesion();
    }//GEN-LAST:event_btnEntrarActionPerformed

    private void textFieldPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldPasswordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            iniciarSesion();
        }
    }//GEN-LAST:event_textFieldPasswordKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnEntrar;
    public javax.swing.JPanel formPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPasswordField textFieldPassword;
    public javax.swing.JTextField textFieldUsuario;
    // End of variables declaration//GEN-END:variables

    private void iniciarSesion(){
        String usuario = textFieldUsuario.getText();
            //verificar que usuario no sea vacio
            if(usuario.length() == 0){
                JOptionPane.showMessageDialog(this, "Ingrese Usuario", "Atencion", JOptionPane.INFORMATION_MESSAGE);
                textFieldUsuario.requestFocus();
                return;
            }

            //verificar que password no contenga caracteres invalidos
            char passArray[] = textFieldPassword.getPassword();
            int caracterInvalido = 0;
            for (int i = 0; i < passArray.length; i++) {
                char c = passArray[i];
                if (!Character.isLetterOrDigit(c)) {
                    caracterInvalido++;
                }
            }
            if (caracterInvalido > 0) {
                JOptionPane.showMessageDialog(rootPane, "La contrase\u00F1a tiene carcteres inv√°lidos!");
                textFieldPassword.requestFocus();
                return;
            }

            //verificar que password no es vacio
            String vPass = new String(passArray);
            if (vPass.length() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese su password!");
                textFieldPassword.requestFocus();
                return;
            }

            String encryptedPSW = "";
            encryptedPSW = Tools.encryptMD5(vPass);

            //System.out.println("Login.java 172 iniciarSesion CLAVE ENCRIPTADA: " + encryptedPSW);
            try{        
                conexion.Conectar();
                tableModel mUser = new tableModel();
                mUser.init("usuarios");

                Map<String, String> where = new HashMap<>();      //Por qu√© campo buscar los registros
                Map<String, String> fields = new HashMap<>();     //Los campos que vamos a recuperar

                fields.put("*", "*");
                where.put("username", usuario);
                where.put("password", encryptedPSW);
                ArrayList<Map<String, String>> alMapData = new ArrayList<>();
                alMapData = mUser.readRegister(fields, where);
                //System.out.println("Login 186 IniciarSesion: cant. usuarios: "+alMapData.size());
                if(!alMapData.isEmpty()){
                    //System.out.println("Login 88 IniciarSesion: user: "+alMapData.get(0).get("username"));
                    //cargar datos de usuario a sesion
                    Map<String, String> userData = new HashMap<>();
                    userData = alMapData.get(0);
                    int userId = Integer.parseInt(userData.get("id"));
                    if(userId > 0){
                        conexion.setUserId(userId);
                        conexion.setUserName(userData.get("username"));
                        conexion.setGrupoId(Integer.parseInt(userData.get("rolid")));
                        conexion.setGrupoName(userData.get("rol"));
                        //mostrar principal y esconder login luego return;
                        principalView = new wPrincipal();
                        principalView.setVisible(true);
                        this.dispose();
                    }else{
                        JOptionPane.showMessageDialog(null, "Usuario no valido", "Error", JOptionPane.OK_OPTION);
                        }
                }else{
                    System.out.println("no se encontro usuario");
                }
                } catch (SQLException ex) {
                System.out.println("AuthController 95 Iniciar sesion error" + ex);
        }
    }
}
