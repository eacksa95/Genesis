
package com.genesis.vistas;

import com.genesis.controladores.RegistrosController;
import com.genesis.model.conexion;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import util.Tools;

/**
 *
 * @author eacks
 */
public class RegClientes extends javax.swing.JInternalFrame implements ActiveFrame {
    RegistrosController rc;
    String menuName;
    String opcion;
    /**
     * Creates new form RegistrosClientes
     */
    public RegClientes(String menuName) {
        initComponents();
        this.menuName = menuName;
        setTitle("Clientes");
        
        //Inicializar Controlador
        rc = new RegistrosController();
        rc.init("clientes", formPanel);
        
        //Establecer nombres de los componentes
        textFieldId.setName("textFieldId");
        textFieldNombre.setName("textFieldNombre");
        textFieldApellido.setName("textFieldApellido");
        textFieldCedula.setName("textFieldCedula");
        
        // Agregar ListSelectionListener al JTable
        //Listener para seleccion de fila de la JTable
        tablaClientes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    // Obtener la fila seleccionada
                    int selectedRow = tablaClientes.getSelectedRow();
                    if (selectedRow != -1) {
                        // Obtener los valores de la fila seleccionada
                        DefaultTableModel model = (DefaultTableModel) tablaClientes.getModel();
                        Map<String, Object> rowData = new HashMap<>();
                        for (int i = 0; i < model.getColumnCount(); i++) {
                            String columnName = model.getColumnName(i);
                            Object value = model.getValueAt(selectedRow, i);
                            rowData.put(columnName, value);
                        }

                        // Establecer los valores en los JTextFields
                        textFieldId.setText(rowData.get("id").toString());
                        textFieldNombre.setText(rowData.get("nombre").toString());
                        textFieldApellido.setText(rowData.get("apellido").toString());
                        textFieldCedula.setText(rowData.get("cedula").toString());
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        lblApellido = new javax.swing.JLabel();
        textFieldApellido = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        textFieldNombre = new javax.swing.JTextField();
        textFieldCedula = new javax.swing.JTextField();
        lblCedula = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        textFieldId = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nombre", "Apellido", "Cedula"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        lblApellido.setText("Apellido");

        lblNombre.setText("Nombre");

        lblCedula.setText("Cedula");

        lblId.setText("ID");

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCedula)
                            .addComponent(lblId))
                        .addGap(28, 28, 28)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addComponent(lblApellido))
                        .addGap(24, 24, 24)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formPanelLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblId))
                        .addGap(19, 19, 19)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCedula)
                            .addComponent(textFieldCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombre)
                            .addComponent(textFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblApellido)
                            .addComponent(textFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(formPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(formPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel formPanel;
    public javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNombre;
    public javax.swing.JTable tablaClientes;
    public javax.swing.JTextField textFieldApellido;
    public javax.swing.JTextField textFieldCedula;
    public javax.swing.JTextField textFieldId;
    public javax.swing.JTextField textFieldNombre;
    // End of variables declaration//GEN-END:variables

    @Override
    public JInternalFrame getActive() {
        return this;
    }
    
    @Override
    public void limpiarFormulario(){
        textFieldId.setText("0");
        textFieldNombre.setText("");
        textFieldApellido.setText("");
        textFieldCedula.setText("");
        textFieldNombre.requestFocus();
    }
    
    @Override
    public void crearRegistro(String operacion){
        textFieldId.setText("0");
        rc.ProcesarSolicitud("C");
    }
    
    @Override
    public void modificarRegistro(String opcion){
        this.opcion = opcion;
        rc.ProcesarSolicitud("U");
    }

    @Override
    public void eliminarRegistro(String opcion){
        this.opcion = opcion;
        int validacion = Tools.validarPermiso(conexion.getGrupoId(), menuName, opcion);
        if(validacion == 0){
            String msg = "NO TIENE PERMISO PARA REALIZAR ESTA OPERACIÓN ";
            JOptionPane.showMessageDialog(this, msg, "ATENCIÓN...!", JOptionPane.OK_OPTION);
            return;
        }
        if(validacion == 1){
            rc.ProcesarSolicitud("D");
            limpiarFormulario();
        }
    }
    
}
